import{_ as a,c as e,a4 as n,o}from"./chunks/framework.qvkBPMhT.js";const h=JSON.parse('{"title":"Retry","description":"","frontmatter":{"outline":"deep","title":"Retry"},"headers":[],"relativePath":"core/retry.md","filePath":"core/retry.md","lastUpdated":1692372290000}'),l={name:"core/retry.md"};function p(r,s,t,c,y,i){return o(),e("div",null,s[0]||(s[0]=[n(`<h2 id="retry" tabindex="-1">Retry <a class="header-anchor" href="#retry" aria-label="Permalink to &quot;Retry&quot;">​</a></h2><p>重试组件可以在任务执行失败时达到某种条件时，自动重试任务。</p><h2 id="内置的重试组件" tabindex="-1">内置的重试组件 <a class="header-anchor" href="#内置的重试组件" aria-label="Permalink to &quot;内置的重试组件&quot;">​</a></h2><h3 id="neverretry" tabindex="-1">NeverRetry <a class="header-anchor" href="#neverretry" aria-label="Permalink to &quot;NeverRetry&quot;">​</a></h3><p>永不重试，任务失败后不会重试。</p><h3 id="alwaysretry" tabindex="-1">AlwaysRetry <a class="header-anchor" href="#alwaysretry" aria-label="Permalink to &quot;AlwaysRetry&quot;">​</a></h3><p>无条件重试，任务失败后会无限重试。</p><h3 id="timesretry" tabindex="-1">TimesRetry <a class="header-anchor" href="#timesretry" aria-label="Permalink to &quot;TimesRetry&quot;">​</a></h3><p>重试次数，任务失败后会重试指定次数。</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki vitesse-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> onestep </span><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> step</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> TimesRetry</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575DD;"># 重试3次任务</span></span>
<span class="line"><span style="color:#666666;">@</span><span style="color:#80A665;">step</span><span style="color:#666666;">(</span><span style="color:#BD976A;">from_broker</span><span style="color:#666666;">=</span><span style="color:#C99076;">...</span><span style="color:#666666;">,</span><span style="color:#BD976A;"> retry</span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;">TimesRetry</span><span style="color:#666666;">(</span><span style="color:#4C9A91;">3</span><span style="color:#666666;">))</span></span>
<span class="line"><span style="color:#CB7676;">def</span><span style="color:#80A665;"> add</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">message</span><span style="color:#666666;">):</span></span>
<span class="line"><span style="color:#B8A965;">    print</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">message</span><span style="color:#666666;">.</span><span style="color:#DBD7CAEE;">body</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#4D9375;">    raise</span><span style="color:#B8A965;"> Exception</span><span style="color:#666666;">(</span><span style="color:#C98A7D77;">&#39;</span><span style="color:#C98A7D;">error</span><span style="color:#C98A7D77;">&#39;</span><span style="color:#666666;">)</span></span></code></pre></div><h3 id="retryifexception" tabindex="-1">RetryIfException <a class="header-anchor" href="#retryifexception" aria-label="Permalink to &quot;RetryIfException&quot;">​</a></h3><p>重试条件，任务失败后会重试，但是只有当抛出指定的异常时才会重试。</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki vitesse-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> onestep </span><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> step</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> RetryIfException</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575DD;"># 重试3次任务</span></span>
<span class="line"><span style="color:#666666;">@</span><span style="color:#80A665;">step</span><span style="color:#666666;">(</span><span style="color:#BD976A;">from_broker</span><span style="color:#666666;">=</span><span style="color:#C99076;">...</span><span style="color:#666666;">,</span><span style="color:#BD976A;"> retry</span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;">RetryIfException</span><span style="color:#666666;">(</span><span style="color:#B8A965;">Exception</span><span style="color:#666666;">))</span></span>
<span class="line"><span style="color:#CB7676;">def</span><span style="color:#80A665;"> add</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">message</span><span style="color:#666666;">):</span></span>
<span class="line"><span style="color:#B8A965;">    print</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">message</span><span style="color:#666666;">.</span><span style="color:#DBD7CAEE;">body</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#4D9375;">    raise</span><span style="color:#B8A965;"> Exception</span><span style="color:#666666;">(</span><span style="color:#C98A7D77;">&#39;</span><span style="color:#C98A7D;">error</span><span style="color:#C98A7D77;">&#39;</span><span style="color:#666666;">)</span></span></code></pre></div><h3 id="advancedretry" tabindex="-1">AdvancedRetry <a class="header-anchor" href="#advancedretry" aria-label="Permalink to &quot;AdvancedRetry&quot;">​</a></h3><p>高级重试策略</p><ol><li>本地重试：如果异常是 RetryViaLocal 或 指定异常，且重试次数未达到上限，则本地重试，不回调</li><li>队列重试：如果异常是 RetryViaQueue，且重试次数未达到上限，则入队重试，不回调</li><li>其他异常：如果异常不是 RetryViaLocal 或 RetryViaQueue 或 指定异常，则不重试，回调 注：待重试的异常若继承自 RetryException，则可单独指定重试次数，否则默认为 3 次</li></ol><p>详见<a href="https://github.com/mic1on/onestep/blob/main/example/example_advanced_retry.py" target="_blank" rel="noreferrer">Example</a></p><h3 id="自定义重试组件" tabindex="-1">自定义重试组件 <a class="header-anchor" href="#自定义重试组件" aria-label="Permalink to &quot;自定义重试组件&quot;">​</a></h3><div class="warning custom-block"><p class="custom-block-title">⚠️继承关系</p><p>自定义重试组件必须继承自<code>BaseRetry</code></p></div>`,19)]))}const D=a(l,[["render",p]]);export{h as __pageData,D as default};
